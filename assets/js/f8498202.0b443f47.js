"use strict";(self.webpackChunkscrypt_docs=self.webpackChunkscrypt_docs||[]).push([[4440],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),c=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(n),h=r,m=u["".concat(o,".").concat(h)]||u[h]||p[h]||s;return n?a.createElement(m,i(i({ref:t},d),{},{components:n})):a.createElement(m,i({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,i=new Array(s);i[0]=u;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<s;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3595:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const s={sidebar_position:4},i="Tutorial 4: Ordinal Lock",l={unversionedId:"tokens/tutorials/ordinal-lock",id:"tokens/tutorials/ordinal-lock",title:"Tutorial 4: Ordinal Lock",description:"Overview",source:"@site/docs/tokens/tutorials/ordinal-lock.md",sourceDirName:"tokens/tutorials",slug:"/tokens/tutorials/ordinal-lock",permalink:"/tokens/tutorials/ordinal-lock",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Tutorial 3: Mint BSV20 V1 Token",permalink:"/tokens/tutorials/mint-bsv20-v1"},next:{title:"Tutorial 5: Ordinals Oracle",permalink:"/tokens/tutorials/ordi-oracle"}},o={},c=[{value:"Overview",id:"overview",level:2},{value:"Contract",id:"contract",level:2},{value:"Constructor",id:"constructor",level:3},{value:"Methods",id:"methods",level:3},{value:"Frontend",id:"frontend",level:2},{value:"Setup Project",id:"setup-project",level:3},{value:"Install the sCrypt SDK",id:"install-the-scrypt-sdk",level:3},{value:"Compile Contract",id:"compile-contract",level:3},{value:"Compile using the <code>watch</code> option",id:"compile-using-the-watch-option",level:2},{value:"Load Contract Artifact",id:"load-contract-artifact",level:3},{value:"Connect Signer to <code>OrdiProvider</code>",id:"connect-signer-to-ordiprovider",level:3},{value:"Integrate Wallet",id:"integrate-wallet",level:3},{value:"Load Ordinals",id:"load-ordinals",level:3},{value:"List an Ordinal",id:"list-an-ordinal",level:3},{value:"Buy an Ordinal",id:"buy-an-ordinal",level:3},{value:"Use Yours Wallet",id:"use-yours-wallet",level:2},{value:"Load Ordinals",id:"load-ordinals-1",level:3},{value:"List an Ordinal",id:"list-an-ordinal-1",level:3},{value:"Buy an Ordinal",id:"buy-an-ordinal-1",level:3},{value:"Conclusion",id:"conclusion",level:2}],d={toc:c};function p(e){let{components:t,...s}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"tutorial-4-ordinal-lock"},"Tutorial 4: Ordinal Lock"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"In this tutorial, we will go over how to use ",(0,r.kt)("a",{parentName:"p",href:"https://scrypt.io/"},"sCrypt")," to build a full-stack dApp on Bitcoin to sell ",(0,r.kt)("a",{parentName:"p",href:"https://docs.1satordinals.com/"},"1Sat Ordinals"),", including the smart contract and an interactive front-end."),(0,r.kt)("h2",{id:"contract"},"Contract"),(0,r.kt)("p",null,"The contract ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/sCrypt-Inc/scrypt-ord/blob/master/tests/contracts/ordinalLock.ts"},"OrdinalLock")," allows an ordinal to be offered up for sale on a decentralized marketplace. These listings can be purchased by anyone who is able to pay the requested price. Listings can also be cancelled by the person who listed them."),(0,r.kt)("p",null,"To record the seller and price, we need to add two properties to the contract."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"export class OrdinalLock extends OrdinalNFT {\n    @prop()\n    seller: PubKey\n\n    @prop()\n    amount: bigint\n\n    ...\n}\n")),(0,r.kt)("h3",{id:"constructor"},"Constructor"),(0,r.kt)("p",null,"Initialize all the ",(0,r.kt)("inlineCode",{parentName:"p"},"@prop")," properties in the constructor."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"constructor(seller: PubKey, amount: bigint) {\n    super()\n    this.init(...arguments)\n    this.seller = seller\n    this.amount = amount\n}\n")),(0,r.kt)("h3",{id:"methods"},"Methods"),(0,r.kt)("p",null,"The public method ",(0,r.kt)("inlineCode",{parentName:"p"},"purchase")," only needs to confine the transaction's outputs to contain:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"transfer ordinal to the buyer"),(0,r.kt)("li",{parentName:"ul"},"payment to the seller")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"@method()\npublic purchase(receiver: Addr) {\n    const outputs =\n        Utils.buildAddressOutput(receiver, 1n) + // ordinal to the buyer\n        Utils.buildAddressOutput(hash160(this.seller), this.amount) + // fund to the seller\n        this.buildChangeOutput()\n    assert(this.ctx.hashOutputs == hash256(outputs), 'hashOutputs check failed')\n}\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/sCrypt-Inc/scrypt-ord/blob/master/tests/contracts/ordinalLock.ts"},"final complete code")," is as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { Addr, prop, method, Utils, hash256, assert, ContractTransaction, bsv, PubKey, hash160, Sig, SigHash } from 'scrypt-ts'\nimport { OrdiMethodCallOptions, OrdinalNFT } from '../scrypt-ord'\n\nexport class OrdinalLock extends OrdinalNFT {\n    @prop()\n    seller: PubKey\n\n    @prop()\n    amount: bigint\n\n    constructor(seller: PubKey, amount: bigint) {\n        super()\n        this.init(...arguments)\n        this.seller = seller\n        this.amount = amount\n    }\n\n    @method()\n    public purchase(receiver: Addr) {\n        const outputs =\n            Utils.buildAddressOutput(receiver, 1n) + // ordinal to the buyer\n            Utils.buildAddressOutput(hash160(this.seller), this.amount) + // fund to the seller\n            this.buildChangeOutput()\n        assert(\n            this.ctx.hashOutputs == hash256(outputs),\n            'hashOutputs check failed'\n        )\n    }\n\n    @method(SigHash.ANYONECANPAY_SINGLE)\n    public cancel(sig: Sig) {\n        assert(this.checkSig(sig, this.seller), 'seller signature check failed')\n        const outputs = Utils.buildAddressOutput(hash160(this.seller), 1n) // ordinal back to the seller\n        assert(\n            this.ctx.hashOutputs == hash256(outputs),\n            'hashOutputs check failed'\n        )\n    }\n\n    static async buildTxForPurchase(\n        current: OrdinalLock,\n        options: OrdiMethodCallOptions<OrdinalLock>,\n        receiver: Addr\n    ): Promise<ContractTransaction> {\n        const defaultAddress = await current.signer.getDefaultAddress()\n        const tx = new bsv.Transaction()\n            .addInput(current.buildContractInput())\n            .addOutput(\n                new bsv.Transaction.Output({\n                    script: bsv.Script.fromHex(\n                        Utils.buildAddressScript(receiver)\n                    ),\n                    satoshis: 1,\n                })\n            )\n            .addOutput(\n                new bsv.Transaction.Output({\n                    script: bsv.Script.fromHex(\n                        Utils.buildAddressScript(hash160(current.seller))\n                    ),\n                    satoshis: Number(current.amount),\n                })\n            )\n            .change(options.changeAddress || defaultAddress)\n        return {\n            tx,\n            atInputIndex: 0,\n            nexts: [],\n        }\n    }\n\n    static async buildTxForCancel(\n        current: OrdinalLock,\n        options: OrdiMethodCallOptions<OrdinalLock>\n    ): Promise<ContractTransaction> {\n        const defaultAddress = await current.signer.getDefaultAddress()\n        const tx = new bsv.Transaction()\n            .addInput(current.buildContractInput())\n            .addOutput(\n                new bsv.Transaction.Output({\n                    script: bsv.Script.fromHex(\n                        Utils.buildAddressScript(hash160(current.seller))\n                    ),\n                    satoshis: 1,\n                })\n            )\n            .change(options.changeAddress || defaultAddress)\n        return {\n            tx,\n            atInputIndex: 0,\n            nexts: [],\n        }\n    }\n}\n")),(0,r.kt)("p",null,"Note the customized calling method ",(0,r.kt)("inlineCode",{parentName:"p"},"buildTxForPurchase")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"buildTxForCancel")," ensure the ordinal is in the first input and goes to the first output, which is also a 1sat output."),(0,r.kt)("h2",{id:"frontend"},"Frontend"),(0,r.kt)("p",null,"We will add a front-end to the ",(0,r.kt)("inlineCode",{parentName:"p"},"OrdinalLock")," smart contract according to this ",(0,r.kt)("a",{parentName:"p",href:"/how-to-integrate-a-frontend/"},"guide"),"."),(0,r.kt)("h3",{id:"setup-project"},"Setup Project"),(0,r.kt)("p",null,"The front-end will be created using ",(0,r.kt)("a",{parentName:"p",href:"https://create-react-app.dev/"},"Create React App"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npx create-react-app ordinal-lock-demo --template typescript\n")),(0,r.kt)("h3",{id:"install-the-scrypt-sdk"},"Install the sCrypt SDK"),(0,r.kt)("p",null,"The sCrypt SDK enables you to easily compile, test, deploy, and call contracts."),(0,r.kt)("p",null,"Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"scrypt-cli")," command line to install the SDK."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd ordinal-lock-demo\nnpm i scrypt-ord\nnpx scrypt-cli init\n")),(0,r.kt)("p",null,"This command will create a contract under ",(0,r.kt)("inlineCode",{parentName:"p"},"src/contracts"),". Replace the file with the contract written ",(0,r.kt)("a",{parentName:"p",href:"#final-code"},"above"),"."),(0,r.kt)("h3",{id:"compile-contract"},"Compile Contract"),(0,r.kt)("p",null,"Compile the contract with the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npx scrypt-cli compile\n")),(0,r.kt)("p",null,"This command will generate a contract artifact file under ",(0,r.kt)("inlineCode",{parentName:"p"},"artifacts"),"."),(0,r.kt)("h2",{id:"compile-using-the-watch-option"},"Compile using the ",(0,r.kt)("inlineCode",{parentName:"h2"},"watch")," option"),(0,r.kt)("p",null,"Monitoring for Real-Time Error Detection"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npx scrypt-cli compile --watch\n")),(0,r.kt)("p",null,"this command will display sCrypt level errors during the compilation process."),(0,r.kt)("h3",{id:"load-contract-artifact"},"Load Contract Artifact"),(0,r.kt)("p",null,"Before writing the front-end code, we need to load the contract artifact in ",(0,r.kt)("inlineCode",{parentName:"p"},"src/index.tsx"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { OrdinalLock } from './contracts/ordinalLock'\nimport artifact from '../artifacts/ordinalLock.json'\nOrdinalLock.loadArtifact(artifact)\n")),(0,r.kt)("h3",{id:"connect-signer-to-ordiprovider"},"Connect Signer to ",(0,r.kt)("inlineCode",{parentName:"h3"},"OrdiProvider")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const provider = new OrdiProvider();\nconst signer = new PandaSigner(provider);\n")),(0,r.kt)("h3",{id:"integrate-wallet"},"Integrate Wallet"),(0,r.kt)("p",null,"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"requestAuth")," method of ",(0,r.kt)("inlineCode",{parentName:"p"},"signer")," to request access to the wallet."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// request authentication\nconst { isAuthenticated, error } = await signer.requestAuth();\nif (!isAuthenticated) {\n    // something went wrong, throw an Error with `error` message\n    throw new Error(error);\n}\n\n// authenticated\n// ...\n")),(0,r.kt)("h3",{id:"load-ordinals"},"Load Ordinals"),(0,r.kt)("p",null,"After a user connect wallet, we can get the his address. Call the ",(0,r.kt)("a",{parentName:"p",href:"https://v3.ordinals.gorillapool.io/api/docs/"},"1Sat Ordinals API")," to retrieve ordinals on this address."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"useEffect(() => {\n  loadCollections()\n}, [connectedAddress])\n\nfunction loadCollections() {\n  if (connectedAddress) {\n    const url = `https://v3.ordinals.gorillapool.io/api/txos/address/${connectedAddress.toString()}/unspent?bsv20=false`\n    fetch(url).then(r => r.json()).then(r => r.filter(e => e.origin.data.insc.file.type !== 'application/bsv-20')).then(r => setCollections(r))   }\n}\n")),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(7312).Z,width:"2880",height:"1752"})),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(5517).Z,width:"2880",height:"1750"})),(0,r.kt)("h3",{id:"list-an-ordinal"},"List an Ordinal"),(0,r.kt)("p",null,"For each ordinal in the collection list, we can click the ",(0,r.kt)("inlineCode",{parentName:"p"},"Sell")," button to list it after filling in the selling price, in satoshis. Sell an ordinal means we need to create a contract instance, and then transfer the ordinal into it. Afterwards, the ordinal is under the control of the contract, meaning it can be bought by anyone paying the price to the seller."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"async function sell() {\n    const signer = new PandaSigner(new OrdiProvider())\n    const publicKey = await signer.getDefaultPubKey()\n\n    const instance = new OrdinalLock(PubKey(toHex(publicKey)), amount)\n    await instance.connect(signer)\n\n    const inscriptionUtxo = await parseUtxo(txid, vout)\n    const inscriptionP2PKH = OrdiNFTP2PKH.fromUTXO(inscriptionUtxo)\n    await inscriptionP2PKH.connect(signer)\n\n    const { tx } = await inscriptionP2PKH.methods.unlock(\n        (sigResps) => findSig(sigResps, publicKey),\n        PubKey(toHex(publicKey)),\n        {\n            transfer: instance,     // <----\n            pubKeyOrAddrToSign: publicKey,\n        } as OrdiMethodCallOptions<OrdiNFTP2PKH>\n    )\n}\n")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://lucid.app/publicSegments/view/50527d66-0710-4658-b8db-b615d60232f8/image.png",alt:null})),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(8965).Z,width:"2880",height:"1750"})),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(8375).Z,width:"2880",height:"1750"})),(0,r.kt)("h3",{id:"buy-an-ordinal"},"Buy an Ordinal"),(0,r.kt)("p",null,"To buy an ordinal that is on sale, we only need to call the contract public method ",(0,r.kt)("inlineCode",{parentName:"p"},"purchase"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"async function buy() {\n    const signer = new PandaSigner(new OrdiProvider())\n    const address = await signer.getDefaultAddress()\n    const { tx } = await instance.methods.purchase(Addr(address.toByteString()))\n}\n")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://lucid.app/publicSegments/view/0b52243b-bdbc-4a13-b5b6-9386be80e155/image.png",alt:null})),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(8099).Z,width:"2880",height:"1750"})),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(8831).Z,width:"2880",height:"1750"})),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(7657).Z,width:"2880",height:"1750"})),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(7083).Z,width:"2880",height:"1750"})),(0,r.kt)("h2",{id:"use-yours-wallet"},"Use Yours Wallet"),(0,r.kt)("p",null,"In March 2024, Panda Wallet was rebranded to ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/yours-org/yours-wallet/"},"Yours Wallet"),"."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/yours-org/yours-wallet"},"Yours Wallet")," is an open-source and non-custodial web3 wallet for BSV and ",(0,r.kt)("a",{parentName:"p",href:"https://docs.1satordinals.com/"},"1Sat Ordinals"),". This wallet allows users to have full control over their funds, providing security and independence in managing their assets."),(0,r.kt)("p",null,"To support Yours Wallet in the dApp, we simply replace all the ",(0,r.kt)("inlineCode",{parentName:"p"},"PandaSigner")," with ",(0,r.kt)("inlineCode",{parentName:"p"},"PandaSigner"),", that's all."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { PandaSigner } from "scrypt-ts/dist/bsv/signers/panda-signer"\n')),(0,r.kt)("p",null,"Different from other ",(0,r.kt)("a",{parentName:"p",href:"/how-to-deploy-and-call-a-contract/#signer"},"signers"),", we can get two addresses from ",(0,r.kt)("inlineCode",{parentName:"p"},"PandaSigner")," after the user authorizes the connect action:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"getDefaultAddress()"),", the address for sending and receiving BSV, paying transaction fees, etc. The same as other signers."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"getOrdAddress()"),", the address for receiving Ordinals ",(0,r.kt)("strong",{parentName:"li"},"only"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const [connectedPayAddress, setConnectedPayAddress] = useState(undefined)\nconst [connectedOrdiAddress, setConnectedOrdiAddress] = useState(undefined)\n...\nasync function connect() {\n    const signer = new PandaSigner(new OrdiProvider())   // <---- use `PandaSigner`\n    const { isAuthenticated, error } = await signer.requestAuth()\n    if (!isAuthenticated) {\n        throw new Error(`Unauthenticated: ${error}`)\n    }\n    setConnectedPayAddress(await signer.getDefaultAddress())  // <----\n    setConnectedOrdiAddress(await signer.getOrdAddress())     // <----\n}\n")),(0,r.kt)("h3",{id:"load-ordinals-1"},"Load Ordinals"),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(8515).Z,width:"2880",height:"1750"})),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(6479).Z,width:"2880",height:"1752"})),(0,r.kt)("h3",{id:"list-an-ordinal-1"},"List an Ordinal"),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(8738).Z,width:"2880",height:"1752"})),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(3965).Z,width:"2880",height:"1748"})),(0,r.kt)("h3",{id:"buy-an-ordinal-1"},"Buy an Ordinal"),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(7087).Z,width:"2880",height:"1752"})),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(4851).Z,width:"2880",height:"1752"})),(0,r.kt)("h2",{id:"conclusion"},"Conclusion"),(0,r.kt)("p",null,"Congratulations! You have successfully completed a full-stack dApp that can sell 1Sat Ordinals on Bitcoin."),(0,r.kt)("p",null,"The full example repo can be found ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/sCrypt-Inc/ordinal-lock-demo"},"here"),"."))}p.isMDXComponent=!0},8099:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/buy1-0cca34ece542fab6f2681485fd602e1b.png"},8831:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/buy2-520cf27a5dc308e0f6823f61a1844e08.png"},7657:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/buy3-f25e3059d0ef019132bd634528f7b71c.png"},7083:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/buy4-8d286427b76802c0be1e4fda7cb7217d.png"},7312:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/load1-bb1f4c54b02b4f3179f17b1dff13a847.png"},5517:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/load2-56db013c94c63eefd6a7840ea119b580.png"},7087:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/panda-buy1-760d3cfc34c6b3b71317f1d94ee25d4d.png"},4851:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/panda-buy2-b0485d04c8a45b8023adfab6adf60973.png"},8515:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/panda-load1-ed689b87b5c3ceb624784955bbe406e7.png"},6479:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/panda-load2-739539800f9f58fcc14ae48753544fc0.png"},8738:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/panda-sell1-d66738e7347241df7974429445559efb.png"},3965:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/panda-sell2-6c50f63a5ad9677bd47408cf10afc3bf.png"},8965:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/sell1-05b4faee211f41647fecb4b83e4c98f2.png"},8375:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/sell2-3bac875c5790de2b6997a7139621c6b7.png"}}]);