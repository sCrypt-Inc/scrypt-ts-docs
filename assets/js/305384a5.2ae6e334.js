"use strict";(self.webpackChunkscrypt_ts_docs=self.webpackChunkscrypt_ts_docs||[]).push([[1250],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>h});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function l(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var c=r.createContext({}),s=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):l(l({},e),t)),n},p=function(t){var e=s(t.components);return r.createElement(c.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,c=t.parentName,p=i(t,["components","mdxType","originalType","parentName"]),u=s(n),h=a,m=u["".concat(c,".").concat(h)]||u[h]||d[h]||o;return n?r.createElement(m,l(l({ref:e},p),{},{components:n})):r.createElement(m,l({ref:e},p))}));function h(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,l=new Array(o);l[0]=u;var i={};for(var c in e)hasOwnProperty.call(e,c)&&(i[c]=e[c]);i.originalType=t,i.mdxType="string"==typeof t?t:a,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4908:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:8},l="How to Integrate With a Frontend",i={unversionedId:"how-to-integrate-a-frontend",id:"how-to-integrate-a-frontend",title:"How to Integrate With a Frontend",description:"This section will show how to integrate your smart contract to a frontend, so users can interact with it.",source:"@site/docs/how-to-integrate-a-frontend.md",sourceDirName:".",slug:"/how-to-integrate-a-frontend",permalink:"/how-to-integrate-a-frontend",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"How to Debug a Contract",permalink:"/how-to-debug-a-contract"},next:{title:"How to Publish a Contract to NPM",permalink:"/how-to-publish-a-contract"}},c={},s=[{value:"Setup",id:"setup",level:2},{value:"React",id:"react",level:3},{value:"<code>scryptTS</code>",id:"scryptts",level:3},{value:"Load Contract",id:"load-contract",level:2},{value:"1. Compile Contract",id:"1-compile-contract",level:3},{value:"2. Load Artifact",id:"2-load-artifact",level:3},{value:"Integrate Wallet",id:"integrate-wallet",level:2}],p={toc:s};function d(t){let{components:e,...o}=t;return(0,a.kt)("wrapper",(0,r.Z)({},p,o,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"how-to-integrate-with-a-frontend"},"How to Integrate With a Frontend"),(0,a.kt)("p",null,"This section will show how to integrate your smart contract to a frontend, so users can interact with it."),(0,a.kt)("p",null,"We use ",(0,a.kt)("a",{parentName:"p",href:"https://reactjs.org/"},"React")," as our frontend framework as an example. We assume that you already have the basic knowledge of frontend development, so we will not spend much time introducing this part of the code, but mostly be focusing on how to interact with the smart contract in the front end project."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Currently, the only supported frontend frameworks is React. We anticipate to add supports for other frameworks over time.")),(0,a.kt)("h2",{id:"setup"},"Setup"),(0,a.kt)("h3",{id:"react"},"React"),(0,a.kt)("p",null,"Run the following command to create a React project, named ",(0,a.kt)("inlineCode",{parentName:"p"},"helloworld"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npx create-react-app helloworld --template typescript\n")),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(236).Z,width:"2880",height:"1752"})),(0,a.kt)("p",null,"We will do most work under the ",(0,a.kt)("inlineCode",{parentName:"p"},"src")," directory."),(0,a.kt)("h3",{id:"scryptts"},(0,a.kt)("inlineCode",{parentName:"h3"},"scryptTS")),(0,a.kt)("p",null,"Run the ",(0,a.kt)("inlineCode",{parentName:"p"},"init")," command of the ",(0,a.kt)("a",{parentName:"p",href:"/installation#the-scrypt-cli-tool"},"CLI")," to turn it into a ",(0,a.kt)("inlineCode",{parentName:"p"},"scryptTS")," project."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cd helloworld\nnpx scrypt-cli init\n")),(0,a.kt)("p",null,"This installs all the dependencies and configs the contract development environment.\nAfter this, we are ready to go!"),(0,a.kt)("h2",{id:"load-contract"},"Load Contract"),(0,a.kt)("p",null,"Before interacting with a smart contract at the front end, we need to load the contract class in two steps."),(0,a.kt)("p",null,"We'll take a look at how to generate the artifact by ourselves first."),(0,a.kt)("h3",{id:"1-compile-contract"},"1. Compile Contract"),(0,a.kt)("p",null,"Before you start, you need to get the contract source files, as a frontend developer."),(0,a.kt)("p",null,"Let's use the ",(0,a.kt)("a",{parentName:"p",href:"/tutorials/hello-world"},"Helloworld contract")," as an example. Copy and paste ",(0,a.kt)("inlineCode",{parentName:"p"},"helloworld.ts")," into the ",(0,a.kt)("inlineCode",{parentName:"p"},"src/contracts")," directory."),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(4837).Z,width:"2880",height:"1752"})),(0,a.kt)("p",null,"Run the following command to compile the contract."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npx scrypt-cli compile\n")),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(7409).Z,width:"1958",height:"237"})),(0,a.kt)("p",null,"After the compilation, you will get an JSON artifact file at ",(0,a.kt)("inlineCode",{parentName:"p"},"artifacts/src/contracts/helloworld.json"),"."),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(8073).Z,width:"2880",height:"1752"})),(0,a.kt)("h3",{id:"2-load-artifact"},"2. Load Artifact"),(0,a.kt)("p",null,"Now with the contract artifact file, you directly load it in the ",(0,a.kt)("inlineCode",{parentName:"p"},"index.tsx")," file."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { Helloworld } from './contracts/helloworld';\nvar artifact = require('../artifacts/src/contracts/helloworld.json');\nHelloworld.loadArtifact(artifact);\n")),(0,a.kt)("p",null,"Now you can create an instance from the contract class as before."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const message = toByteString('hello world', true)\nconst instance = new Helloworld(sha256(message))\n")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"You cannot simply call ",(0,a.kt)("inlineCode",{parentName:"p"},"Helloworld.compile()")," at the front end, since it only works in NodeJS, not in browser.")),(0,a.kt)("h2",{id:"integrate-wallet"},"Integrate Wallet"),(0,a.kt)("p",null,"You will integrate ",(0,a.kt)("a",{parentName:"p",href:"https://sensilet.com/"},"Sensilet"),", a MetaMask-like wallet, into the project."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"You can refer to this ",(0,a.kt)("a",{parentName:"p",href:"/how-to-add-a-signer"},"guide")," to add support for other wallets.")),(0,a.kt)("p",null,"To request access to the wallet, you can use its ",(0,a.kt)("inlineCode",{parentName:"p"},"requestAuth")," method. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const provider = new DefaultProvider(bsv.Networks.testnet);\nconst signer = new SensiletSigner(provider);\n\n// request authentication\nconst { isAuthenticated, error } = await signer.requestAuth();\nif (!isAuthenticated) {\n    // something went wrong, throw an Error with `error` message\n    throw new Error(error);\n}\n\n// authenticated\n// you can show user's default address\nconst userAddress = await signer.getDefaultAddress();\n// ...\n")),(0,a.kt)("p",null,"Now you can connect the wallet to the contract instance as before."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"await instance.connect(signer);\n")),(0,a.kt)("p",null,"Afterwards, you can interact with the contract from the front end by ",(0,a.kt)("a",{parentName:"p",href:"/how-to-deploy-and-call-a-contract#contract-call"},"calling its method")," as usual."),(0,a.kt)("p",null,"Go ",(0,a.kt)("a",{parentName:"p",href:"https://learn.scrypt.io/en/courses/Build-a-Tic-tac-toe-Game-with-sCrypt-614c387bc0974f55df5af1e5"},"here")," to see a full example on how to build a Tic-Tac-Toe game on chain."))}d.isMDXComponent=!0},8073:(t,e,n)=>{n.d(e,{Z:()=>r});const r=n.p+"assets/images/contract-artifacts-74131642d0f20df4754b3b025ab969d4.png"},4837:(t,e,n)=>{n.d(e,{Z:()=>r});const r=n.p+"assets/images/copy-contract-source-db12bc435f01da4826e3ce062c96a0f9.png"},236:(t,e,n)=>{n.d(e,{Z:()=>r});const r=n.p+"assets/images/react-scaffold-6d54c45b844980171db6411cdc8a0f8c.png"},7409:(t,e,n)=>{n.d(e,{Z:()=>r});const r=n.p+"assets/images/scrypt-cli-compile-db0450f151dd23b09c406b984f47a6d0.png"}}]);