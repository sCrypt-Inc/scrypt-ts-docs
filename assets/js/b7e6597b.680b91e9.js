"use strict";(self.webpackChunkscrypt_docs=self.webpackChunkscrypt_docs||[]).push([[6672],{3905:(t,e,n)=>{n.d(e,{Zo:()=>s,kt:()=>y});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function c(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var l=r.createContext({}),p=function(t){var e=r.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):c(c({},e),t)),n},s=function(t){var e=p(t.components);return r.createElement(l.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,l=t.parentName,s=i(t,["components","mdxType","originalType","parentName"]),u=p(n),y=a,f=u["".concat(l,".").concat(y)]||u[y]||d[y]||o;return n?r.createElement(f,c(c({ref:e},s),{},{components:n})):r.createElement(f,c({ref:e},s))}));function y(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,c=new Array(o);c[0]=u;var i={};for(var l in e)hasOwnProperty.call(e,l)&&(i[l]=e[l]);i.originalType=t,i.mdxType="string"==typeof t?t:a,c[1]=i;for(var p=2;p<o;p++)c[p]=n[p];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9571:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:5},c="How to Integrate sCrypt Service",i={unversionedId:"advanced/how-to-integrate-scrypt-service",id:"advanced/how-to-integrate-scrypt-service",title:"How to Integrate sCrypt Service",description:"Initialize sCrypt Client",source:"@site/docs/advanced/how-to-integrate-scrypt-service.md",sourceDirName:"advanced",slug:"/advanced/how-to-integrate-scrypt-service",permalink:"/docs/advanced/how-to-integrate-scrypt-service",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"How to Debug ScriptContext Failure",permalink:"/docs/advanced/how-to-debug-scriptcontext"},next:{title:"Tutorials",permalink:"/docs/category/tutorials"}},l={},p=[{value:"Initialize sCrypt Client",id:"initialize-scrypt-client",level:2},{value:"Upload Contract Artifact",id:"upload-contract-artifact",level:2},{value:"Contract Deployment",id:"contract-deployment",level:2},{value:"Contract Calling",id:"contract-calling",level:2}],s={toc:p};function d(t){let{components:e,...n}=t;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"how-to-integrate-scrypt-service"},"How to Integrate sCrypt Service"),(0,a.kt)("h2",{id:"initialize-scrypt-client"},"Initialize sCrypt Client"),(0,a.kt)("p",null,"Passing your own API key to the ",(0,a.kt)("inlineCode",{parentName:"p"},"Scrypt.init")," function to initialize the sCrypt client. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { Scrypt } from 'scrypt-ts'\n\nScrypt.init({\n  apiKey: 'YOUR_API_KEY',\n})\n")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"For now, you can use the test key ",(0,a.kt)("inlineCode",{parentName:"p"},"alpha_test_api_key"),".")),(0,a.kt)("h2",{id:"upload-contract-artifact"},"Upload Contract Artifact"),(0,a.kt)("p",null,"Before deploying the contract, it's required to upload the contract artifact."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"await DemoContract.compile()\n\n// need to upload contract artifact before deploying it\nconst hexHash = await Scrypt.contractApi.uploadArtifact(DemoContract)\nconsole.log(`Contract artifact uploaded, the hexHash is ${hexHash}`)\n")),(0,a.kt)("h2",{id:"contract-deployment"},"Contract Deployment"),(0,a.kt)("p",null,"To deploy the contract, you can refer to this ",(0,a.kt)("a",{parentName:"p",href:"/docs/how-to-deploy-and-call-a-contract/#contract-deployment"},"guide"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const deployTx = await instance.deploy(1)\nconsole.log(`Contract deployed: ${deployTx.id}`)\n\nconst contractId = {\n  /** The deployment transaction id */\n  txId: deployTx.id,\n  /** The output index */\n  outputIndex: 0,\n}\n")),(0,a.kt)("p",null,"After the deployment, you can use the outpoint of the deployment tx to track your contract instance."),(0,a.kt)("h2",{id:"contract-calling"},"Contract Calling"),(0,a.kt)("p",null,"Before calling, you need to create a contract instance aligned with the on-chain state."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const currentInstance = await Scrypt.contractApi.getLatestInstance(\n  DemoContract,\n  contractId\n)\n")),(0,a.kt)("p",null,"With the contract instance, you can call the contract according to this ",(0,a.kt)("a",{parentName:"p",href:"/docs/how-to-deploy-and-call-a-contract/#contract-call"},"guide"),"."))}d.isMDXComponent=!0}}]);